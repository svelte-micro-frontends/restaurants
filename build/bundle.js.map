{"version":3,"file":"bundle.js","sources":["../../node_modules/.pnpm/single-spa-svelte@2.1.0/node_modules/single-spa-svelte/lib/single-spa-svelte.js","../../node_modules/.pnpm/svelte@3.29.7/node_modules/svelte/internal/index.mjs","../../node_modules/.pnpm/svelte@3.29.7/node_modules/svelte/store/index.mjs","../../node_modules/.pnpm/svelte-routing@1.4.2_svelte@3.29.7/node_modules/svelte-routing/src/contexts.js","../../node_modules/.pnpm/svelte-routing@1.4.2_svelte@3.29.7/node_modules/svelte-routing/src/history.js","../../node_modules/.pnpm/svelte-routing@1.4.2_svelte@3.29.7/node_modules/svelte-routing/src/utils.js","../../node_modules/.pnpm/svelte-routing@1.4.2_svelte@3.29.7/node_modules/svelte-routing/src/Router.svelte","../../node_modules/.pnpm/svelte-routing@1.4.2_svelte@3.29.7/node_modules/svelte-routing/src/Link.svelte","../../src/components/RestaurantList.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = singleSpaSvelte;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar defaultOpts = {\n  // required opts\n  component: null,\n  // optional opts\n  domElementGetter: null,\n  props: {}\n};\n\nfunction singleSpaSvelte(userOpts) {\n  if (_typeof(userOpts) !== \"object\") {\n    throw new Error(\"single-spa-svelte requires a configuration object\");\n  }\n\n  var opts = _objectSpread(_objectSpread({}, defaultOpts), userOpts);\n\n  if (!opts.component) {\n    throw new Error(\"single-spa-svelte must be passed opts.component\");\n  } // Just a shared object to store the mounted object state\n\n\n  var mountedInstances = {};\n  return {\n    bootstrap: bootstrap.bind(null, opts, mountedInstances),\n    mount: mount.bind(null, opts, mountedInstances),\n    unmount: unmount.bind(null, opts, mountedInstances),\n    update: update.bind(null, opts, mountedInstances)\n  };\n}\n\nfunction bootstrap(opts) {\n  return Promise.resolve();\n}\n\nfunction mount(opts, mountedInstances, singleSpaProps) {\n  var defaultOptKeys = Object.keys(defaultOpts);\n  var svelteOpts = Object.keys(opts).reduce(function (object, key) {\n    if (!defaultOptKeys.includes(key)) {\n      object[key] = opts[key];\n    }\n\n    return object;\n  }, {});\n  return Promise.resolve().then(function () {\n    var domElementGetter = chooseDomElementGetter(opts, singleSpaProps);\n    var domElement = domElementGetter(); // See https://svelte.dev/docs#Creating_a_component\n\n    mountedInstances.instance = new opts.component(_objectSpread(_objectSpread({}, svelteOpts), {}, {\n      target: domElement,\n      props: Object.assign({}, singleSpaProps, opts.props)\n    }));\n  });\n}\n\nfunction unmount(opts, mountedInstances) {\n  return Promise.resolve().then(function () {\n    mountedInstances.instance.$destroy ? mountedInstances.instance.$destroy() : mountedInstances.instance.destroy();\n  });\n}\n\nfunction update(opts, mountedInstances, props) {\n  return Promise.resolve().then(function () {\n    mountedInstances.instance.$set ? mountedInstances.instance.$set(props) : mountedInstances.instance.set(props);\n  });\n}\n\nfunction chooseDomElementGetter(opts, props) {\n  props = props && props.customProps ? props.customProps : props;\n\n  if (props.domElement) {\n    return function () {\n      return props.domElement;\n    };\n  } else if (props.domElementGetter) {\n    return props.domElementGetter;\n  } else if (opts.domElementGetter) {\n    return opts.domElementGetter;\n  } else {\n    return defaultDomElementGetter(props);\n  }\n}\n\nfunction defaultDomElementGetter(props) {\n  var appName = props.appName || props.name;\n\n  if (!appName) {\n    throw Error(\"single-spa-svelte was not given an application name as a prop, so it can't make a unique dom element container for the svelte application\");\n  }\n\n  var htmlId = \"single-spa-application:\".concat(appName);\n  return function defaultDomEl() {\n    var domElement = document.getElementById(htmlId);\n\n    if (!domElement) {\n      domElement = document.createElement(\"div\");\n      domElement.id = htmlId;\n      document.body.appendChild(domElement);\n    }\n\n    return domElement;\n  };\n}\n\n//# sourceMappingURL=single-spa-svelte.js.map","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.7' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, createEventDispatcher } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n  import { navigate } from \"./history.js\";\n  import { startsWith, resolve, shouldNavigate } from \"./utils.js\";\n\n  export let to = \"#\";\n  export let replace = false;\n  export let state = {};\n  export let getProps = () => ({});\n\n  const { base } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n  const dispatch = createEventDispatcher();\n\n  let href, isPartiallyCurrent, isCurrent, props;\n  $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n  $: isPartiallyCurrent = startsWith($location.pathname, href);\n  $: isCurrent = href === $location.pathname;\n  $: ariaCurrent = isCurrent ? \"page\" : undefined;\n  $: props = getProps({\n    location: $location,\n    href,\n    isPartiallyCurrent,\n    isCurrent\n  });\n\n  function onClick(event) {\n    dispatch(\"click\", event);\n\n    if (shouldNavigate(event)) {\n      event.preventDefault();\n      // Don't push another entry to the history stack when the user\n      // clicks on a Link to the page they are currently on.\n      const shouldReplace = $location.pathname === href || replace;\n      navigate(href, { state, replace: shouldReplace });\n    }\n  }\n</script>\n\n<a href=\"{href}\" aria-current=\"{ariaCurrent}\" on:click=\"{onClick}\" {...props}>\n  <slot></slot>\n</a>\n","<script>\n  export let items;\n  import { Router, Link } from \"svelte-routing\";\n  let currentFilters = [];\n  let restaurants = items;\n\n  function filterRestaurants(ev) {\n    const priceRange = ev.target.value;\n    if(!currentFilters.includes(priceRange)) {\n      currentFilters.push(priceRange);\n    } else {\n      currentFilters.splice(currentFilters.findIndex(i => i === priceRange), 1);\n    }\n     restaurants = currentFilters.length > 0 ? items.filter(r => currentFilters.includes(r.priceRange)) : items;\n\n  }\n\n  function search(ev) {\n    const query = ev.target.value.toLowerCase();\n    if(query && query.length > 2 ) {\n      restaurants = items.filter(i => i.name.toLowerCase().includes(query));\n    } else {\n      restaurants = items;\n    }\n  }\n\n  function clearFilters() {\n    currentFilters = [];\n    filterRestaurants();\n  }\n\n  export let url;\n\n</script>\n<Router url=\"{url}\">\n<main id=\"restaurants\">\n  <form>\n    <label for=\"txtSearch\">Search: \n   <input type=\"text\" id=\"txtSearch\" on:input={search}/>\n   </label>\n    <label>Price range: </label>\n    <label>$<input type=\"checkbox\" value=\"$\" on:click={filterRestaurants}/></label>\n    <label>$$<input type=\"checkbox\" value=\"$$\" on:click={filterRestaurants}/></label>\n    <label>$$$<input type=\"checkbox\" value=\"$$$\" on:click={filterRestaurants}/></label>\n    <label>$$$$<input type=\"checkbox\" value=\"$$$$\" on:click={filterRestaurants}/></label>\n    <button class=\"clear-button\" type=\"button\" on:click={clearFilters}>Clear</button>\n  </form>\n  <div class=\"restaurant-list\">\n    {#each restaurants as r}\n\n      <Link to=\"/order/{r.id}\">\n      <div class=\"card\">\n        <div class=\"card--title\">\n        <h2>{r.name}</h2>\n        <span>{r.priceRange}</span>\n        </div>\n        <img src=\"https://content.demo.microfrontends.com{r.imageSrc}\" alt=\"{r.imageDescription}\" />\n        <p class=\"description\">{r.description}</p>\n      </div>\n      </Link>\n    {/each}\n  </div>\n</main>\n</Router>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  a,a:hover, a:visited {\n    text-decoration: none;\n    color: #2b2318;\n  }\n\n  #txtSearch {\n    height: 30px;\n    font-size: 20px;\n    margin-left: 5px;\n  }\n\n  #restaurants {\n    max-width: 1150px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n\n  .restaurant-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    margin-top: 1em;\n  }\n\n  .card {\n    display: inline-block;\n    width: 100%;\n    max-width: 350px;\n    margin: 0px 5px;\n  }\n\n  .card--title {\n    display: flex;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    -webkit-box-align: center;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n\n  form {\n    display: flex;\n    justify-content: space-evenly;\n    font-size: 24px;\n  }\n\n  .clear-button {\n    height: 30px;\n    width: 100px;\n    font-size: 20px;\n    background-color: rgb(231, 150, 82);\n    color: rgb(43, 35, 24);\n    border-radius: 2px;\n    border: none;\n    cursor: pointer;\n  }\n\n  .description {\n    margin-top: 0;\n    font-size: 20px;\n    text-align:left;\n  }\n\n</style>\n","<script>\n  import RestaurantList from './components/RestaurantList.svelte';\n  let promise  = fetch('https://api.jsonbin.io/b/5fbded3990e7c66167f6aa01', {\n    headers: {\n      'secret-key': '$2b$10$WgrEnl6Ev9ry0rK.KNhgo.lGZjT0PEuOnXTSfRAd61nH5SOrvoPz.'\n    }\n  }).then(r => r.json() );\n\n\n</script>\n\n\n{#await promise}\n  <h2 class=\"center\">Loading...</h2>\n{:then restaurants}\n  <RestaurantList items={restaurants}/>\n{:catch error}\n  <h2 class=\"center\">Some unknown error occurred, can't able to fetch the restaurants.</h2>\n{/await}\n\n<style>\n  .center {\n    text-align:center;\n    margin: 5em auto;\n  }\n</style>\n","import singleSpaSvelte from 'single-spa-svelte';\nimport App from './App.svelte';\n\nconst svelteLifecycles = singleSpaSvelte({\n  component: App,\n  domElementGetter: () => document.getElementById('single-spa-application:@feedme/restaurants'),\n  props: { someData: 'data' }\n});\nexport const bootstrap = svelteLifecycles.bootstrap;\nexport const mount = svelteLifecycles.mount;\nexport const unmount = svelteLifecycles.unmount;\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","exports","userOpts","Error","opts","defaultOpts","component","mountedInstances","bootstrap","bind","mount","unmount","update","domElementGetter","props","Promise","resolve","singleSpaProps","defaultOptKeys","svelteOpts","reduce","includes","then","domElement","customProps","appName","name","htmlId","concat","document","getElementById","createElement","id","body","appendChild","defaultDomElementGetter","chooseDomElementGetter","instance","assign","$destroy","destroy","$set","set","noop","tar","src","k","run","fn","blank_object","create","run_all","fns","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","callback","$$","on_destroy","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","get_slot_changes","slot_context","p","append","node","insert","anchor","insertBefore","detach","parentNode","removeChild","element","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","__proto__","style","cssText","set_data","wholeText","current_component","set_current_component","get_current_component","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","on_mount","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","init","create_fragment","not_equal","parent_component","prop_values","bound","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","index","indexOf","splice","$$props","$$set","subscriber_queue","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","LOCATION","ROUTER","getLocation","location","state","history","globalHistory","listeners","listener","popstateListener","action","to","replace","Date","now","replaceState","pushState","createHistory","Boolean","window","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","navigate","paramRe","startsWith","string","substr","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","addQuery","query","combinePaths","basepath","url","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","onMount","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","levels","updates","to_null_out","accounted_for","n","getProps","dispatch","href","isPartiallyCurrent","isCurrent","toPathname","toQuery","basePathname","toSegments","baseSegments","allSegments","segments","ariaCurrent","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","shouldReplace","priceRange","description","imageSrc","imageDescription","iterations","items","currentFilters","restaurants","filterRestaurants","ev","findIndex","toLowerCase","promise","info","token","resolved","child_ctx","current","needs_flush","blocks","error","catch","hasCatch","fetch","headers","secret-key","json","svelteLifecycles","singleSpaSvelte","someData"],"mappings":"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"}